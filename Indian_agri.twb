<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20233.24.0112.1233                               -->
<workbook original-version='18.1' source-build='2023.3.2 (20233.24.0112.1233)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='indian_agri_data (agri_dataset)' inline='true' name='federated.05ip7811el8irn1apsbep01nbqgv' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='agri_dataset' name='excel-direct.1q1uj9u120fdfv199t1pq1ki70r7'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='D:/Indian Agriculture analysis/agri_dataset.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1q1uj9u120fdfv199t1pq1ki70r7' name='indian_agri_data' table='[indian_agri_data$]' type='table'>
          <columns gridOrigin='A1:H2239:no:A1:H2239:0' header='yes' outcome='6'>
            <column datatype='string' name='state' ordinal='0' />
            <column datatype='string' name='district' ordinal='1' />
            <column datatype='string' name='market' ordinal='2' />
            <column datatype='string' name='commodity' ordinal='3' />
            <column datatype='integer' name='min_price' ordinal='4' />
            <column datatype='integer' name='max_price' ordinal='5' />
            <column datatype='integer' name='modal_price' ordinal='6' />
            <column datatype='string' name='Category' ordinal='7' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1q1uj9u120fdfv199t1pq1ki70r7' name='indian_agri_data' table='[indian_agri_data$]' type='table'>
          <columns gridOrigin='A1:H2239:no:A1:H2239:0' header='yes' outcome='6'>
            <column datatype='string' name='state' ordinal='0' />
            <column datatype='string' name='district' ordinal='1' />
            <column datatype='string' name='market' ordinal='2' />
            <column datatype='string' name='commodity' ordinal='3' />
            <column datatype='integer' name='min_price' ordinal='4' />
            <column datatype='integer' name='max_price' ordinal='5' />
            <column datatype='integer' name='modal_price' ordinal='6' />
            <column datatype='string' name='Category' ordinal='7' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[indian_agri_data]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:H2239:no:A1:H2239:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>130</remote-type>
            <local-name>[state]</local-name>
            <parent-name>[indian_agri_data]</parent-name>
            <remote-alias>state</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[indian!agri!data_325EBE94C35F4585848D132F6D49E3DD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>district</remote-name>
            <remote-type>130</remote-type>
            <local-name>[district]</local-name>
            <parent-name>[indian_agri_data]</parent-name>
            <remote-alias>district</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[indian!agri!data_325EBE94C35F4585848D132F6D49E3DD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>market</remote-name>
            <remote-type>130</remote-type>
            <local-name>[market]</local-name>
            <parent-name>[indian_agri_data]</parent-name>
            <remote-alias>market</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[indian!agri!data_325EBE94C35F4585848D132F6D49E3DD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>commodity</remote-name>
            <remote-type>130</remote-type>
            <local-name>[commodity]</local-name>
            <parent-name>[indian_agri_data]</parent-name>
            <remote-alias>commodity</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[indian!agri!data_325EBE94C35F4585848D132F6D49E3DD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>min_price</remote-name>
            <remote-type>20</remote-type>
            <local-name>[min_price]</local-name>
            <parent-name>[indian_agri_data]</parent-name>
            <remote-alias>min_price</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[indian!agri!data_325EBE94C35F4585848D132F6D49E3DD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>max_price</remote-name>
            <remote-type>20</remote-type>
            <local-name>[max_price]</local-name>
            <parent-name>[indian_agri_data]</parent-name>
            <remote-alias>max_price</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[indian!agri!data_325EBE94C35F4585848D132F6D49E3DD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>modal_price</remote-name>
            <remote-type>20</remote-type>
            <local-name>[modal_price]</local-name>
            <parent-name>[indian_agri_data]</parent-name>
            <remote-alias>modal_price</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[indian!agri!data_325EBE94C35F4585848D132F6D49E3DD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[indian_agri_data]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[indian!agri!data_325EBE94C35F4585848D132F6D49E3DD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column aggregation='CountD' caption='Commodity (copy)' datatype='string' name='[Commodity (copy)_1394427036852277249]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[commodity]' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='indian_agri_data' datatype='table' name='[__tableau_internal_object_id__].[indian!agri!data_325EBE94C35F4585848D132F6D49E3DD]' role='measure' type='quantitative' />
      <column aggregation='CountD' caption='Commodity' datatype='string' default-role='measure' default-type='quantitative' name='[commodity]' role='dimension' type='nominal' />
      <column caption='District' datatype='string' name='[district]' role='dimension' type='nominal' />
      <column aggregation='CountD' caption='Market' datatype='string' name='[market]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Max Price' datatype='integer' name='[max_price]' role='measure' type='quantitative' />
      <column caption='Min Price' datatype='integer' name='[min_price]' role='measure' type='quantitative' />
      <column caption='Modal Price' datatype='integer' name='[modal_price]' role='measure' type='quantitative' />
      <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
        <semantic-values semantic-role='[State].[Name]'>
          <semantic-value key='&quot;Uttrakhand&quot;' value='&quot;Uttarakhand&quot;' />
        </semantic-values>
      </column>
      <column-instance column='[max_price]' derivation='Avg' name='[avg:max_price:qk]' pivot='key' type='quantitative' />
      <column-instance column='[min_price]' derivation='Avg' name='[avg:min_price:qk]' pivot='key' type='quantitative' />
      <column-instance column='[modal_price]' derivation='Avg' name='[avg:modal_price:qk]' pivot='key' type='quantitative' />
      <column-instance column='[market]' derivation='None' name='[none:market:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:market:nk]' palette='orange_10_0' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Anchal&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Barpathari&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Budalur&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Gummidipoondy&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kasinagar&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kurinchipadi&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Maranelloor&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Pandua&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Pudupalayam&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sultanpurchilkana&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Umreth&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Acharapakkam&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bachau&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bishenpur&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chikli(Khorgam)&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Godabhaga&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jaithari&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kangra(Jaisinghpur)&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Malout&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mulakalacheruvu&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Piravam&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Shahzadpur&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Thiruppananthal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Villupuram&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Akluj&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Baraut&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bodeli(Hadod)&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Chogawan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Digapahandi&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gopiganj&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Koratla&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mangkolemba&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Nadiyad(Chaklasi)&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pallipattu&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pongalur&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rura&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sirsa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Yawal&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Annur&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Deoli&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Harike&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kalavai&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lasalgaon(Niphad)&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Negamam&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pappireddipatti&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pune(Pimpri)&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sanquelim&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Taliparamba&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Vallam&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Angul&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Baruipur(Canning)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Burdwan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dasda&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Elumathur&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Guskara(Burdwan)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Katwa&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lakhanpuri&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mau(Chitrakut)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nanuta&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Panposh&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Samsabad&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sunguvarchatram&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Uniyara&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bardoli(Katod)&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bodeli(Kalediya)&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Chutmalpur&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Divai&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Gorakhpur&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jarar&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Karumanturai&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Manjeswaram&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nakud&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pamohi(Garchuk)&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ponner&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;S.Mandvi&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sivagangai&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tiruchengode&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Zaloosa-Chararishrief (F&amp;V)&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dhar(F&amp;V)&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kamlaganj&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Maduranthagam&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Moreh&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Palakode&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Pethappampatti&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ramanagara&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sevur&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Vemulawada&quot;</bucket>
            </map>
            <map to='#9e3d22'>
              <bucket>&quot;Velur&quot;</bucket>
            </map>
            <map to='#9f3d22'>
              <bucket>&quot;Vellore&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Achnera&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bishnupur(Bankura)&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chinnasalem&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gogamba&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jalalabad&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kangra(Jassour)&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kolhapur(Malkapur)&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Manalurpet&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Muthur&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Paliakala&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Pitlam&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Risia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sheopurkalan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Thondamuthur&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Viswan&quot;</bucket>
            </map>
            <map to='#a13e22'>
              <bucket>&quot;Tindivanam&quot;</bucket>
            </map>
            <map to='#a33f22'>
              <bucket>&quot;Thoubal&quot;</bucket>
            </map>
            <map to='#a54022'>
              <bucket>&quot;Thanjavur&quot;</bucket>
            </map>
            <map to='#a74122'>
              <bucket>&quot;Thandla&quot;</bucket>
            </map>
            <map to='#a94222'>
              <bucket>&quot;Thanabhawan&quot;</bucket>
            </map>
            <map to='#ab4322'>
              <bucket>&quot;Surajgarh&quot;</bucket>
            </map>
            <map to='#ac4422'>
              <bucket>&quot;Sri Madhopur&quot;</bucket>
            </map>
            <map to='#ae4522'>
              <bucket>&quot;Shillong&quot;</bucket>
            </map>
            <map to='#b04623'>
              <bucket>&quot;Sendhwa&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bhucho&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dhanaula&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kalliakavillai&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kodumudi&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Madhira&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Orathanadu&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rajapalayam&quot;</bucket>
            </map>
            <map to='#b24723'>
              <bucket>&quot;Savner&quot;</bucket>
            </map>
            <map to='#b44823'>
              <bucket>&quot;Sambhal&quot;</bucket>
            </map>
            <map to='#b64923'>
              <bucket>&quot;Salem&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ammoor&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bargur&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bodeli(Modasar)&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Doharighat&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jasvantnagar&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kasargod&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mannar&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Pandhana(F&amp;V)&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Port Blair&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sahnewal&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Siyana&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Tiruvennainallur&quot;</bucket>
            </map>
            <map to='#b84a23'>
              <bucket>&quot;Robertsganj&quot;</bucket>
            </map>
            <map to='#ba4b23'>
              <bucket>&quot;Rasipuram&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Anta&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Betnoti&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Chathanoor&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Deoulgaon Raja&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gadarwada&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hindol&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kalikiri&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kharupetia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lohian Khas&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Newasa(Ghodegaon)&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Parassala&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Purulia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Saraskana&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Taura&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Vayalapadu&quot;</bucket>
            </map>
            <map to='#bb4c23'>
              <bucket>&quot;Ramannapet&quot;</bucket>
            </map>
            <map to='#bd4d23'>
              <bucket>&quot;Rajpura&quot;</bucket>
            </map>
            <map to='#bf4e23'>
              <bucket>&quot;Raiganj&quot;</bucket>
            </map>
            <map to='#c14f22'>
              <bucket>&quot;Pune&quot;</bucket>
            </map>
            <map to='#c35022'>
              <bucket>&quot;Pollachi&quot;</bucket>
            </map>
            <map to='#c45122'>
              <bucket>&quot;Pennagaram&quot;</bucket>
            </map>
            <map to='#c65222'>
              <bucket>&quot;Patti&quot;</bucket>
            </map>
            <map to='#c85322'>
              <bucket>&quot;Pataudi&quot;</bucket>
            </map>
            <map to='#ca5422'>
              <bucket>&quot;Papanasam&quot;</bucket>
            </map>
            <map to='#cb5522'>
              <bucket>&quot;Pandharpur&quot;</bucket>
            </map>
            <map to='#cd5622'>
              <bucket>&quot;Palladam&quot;</bucket>
            </map>
            <map to='#cf5722'>
              <bucket>&quot;Palani&quot;</bucket>
            </map>
            <map to='#d15821'>
              <bucket>&quot;Palampur&quot;</bucket>
            </map>
            <map to='#d35921'>
              <bucket>&quot;Padra&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Aroor&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bhanjanagar&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Chelakkara&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Dera Baba Nanak&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Gangavalli&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kaliyanchanda&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mihipurwa&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nilagiri&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Parlakhemundi&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Rahata&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sathur&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Thalaivasal&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Vazhapadi&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Attili&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bhuntar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ghanaur&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Itawa&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kodungalloor&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Madlauda&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mohammdi&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Senjeri&quot;</bucket>
            </map>
            <map to='#d55a21'>
              <bucket>&quot;Omalur&quot;</bucket>
            </map>
            <map to='#d65c21'>
              <bucket>&quot;Namakkal&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Avalurpet&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bishalgarh&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chhibramau(Kannuj)&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dharampuri&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jagnair&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kolathur&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mahboob Manison&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Morinda&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Pipli&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Shahpur&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Thirumangalam&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Vikkiravandi&quot;</bucket>
            </map>
            <map to='#d85d20'>
              <bucket>&quot;Namagiripettai&quot;</bucket>
            </map>
            <map to='#da5e20'>
              <bucket>&quot;Nalgonda&quot;</bucket>
            </map>
            <map to='#dc5f20'>
              <bucket>&quot;Mirzapur&quot;</bucket>
            </map>
            <map to='#de6020'>
              <bucket>&quot;Milak&quot;</bucket>
            </map>
            <map to='#e06120'>
              <bucket>&quot;Memari&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Angul(Jarapada)&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Baruwasagar&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cachar&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Dasuya&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ettumanoor&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kadaura&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Khairagarh&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mehatpur&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Narharpur&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pune(Hadapsar)&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Samsi&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Uthangarai&quot;</bucket>
            </map>
            <map to='#e16220'>
              <bucket>&quot;Melur&quot;</bucket>
            </map>
            <map to='#e36420'>
              <bucket>&quot;Mansa&quot;</bucket>
            </map>
            <map to='#e46520'>
              <bucket>&quot;Mandvi&quot;</bucket>
            </map>
            <map to='#e56720'>
              <bucket>&quot;Lunkaransar&quot;</bucket>
            </map>
            <map to='#e76820'>
              <bucket>&quot;Lalganj&quot;</bucket>
            </map>
            <map to='#e86a20'>
              <bucket>&quot;Kumbakonam&quot;</bucket>
            </map>
            <map to='#e96b20'>
              <bucket>&quot;Kottayam&quot;</bucket>
            </map>
            <map to='#eb6c20'>
              <bucket>&quot;Kolhapur&quot;</bucket>
            </map>
            <map to='#ec6e20'>
              <bucket>&quot;Kolar&quot;</bucket>
            </map>
            <map to='#ed7020'>
              <bucket>&quot;Khatra&quot;</bucket>
            </map>
            <map to='#ed7221'>
              <bucket>&quot;Khanpur&quot;</bucket>
            </map>
            <map to='#ee7422'>
              <bucket>&quot;Kashipur&quot;</bucket>
            </map>
            <map to='#ee7623'>
              <bucket>&quot;Karamadai&quot;</bucket>
            </map>
            <map to='#ef7824'>
              <bucket>&quot;Karaikal&quot;</bucket>
            </map>
            <map to='#f07a26'>
              <bucket>&quot;Karad&quot;</bucket>
            </map>
            <map to='#f07c27'>
              <bucket>&quot;Kanchipuram&quot;</bucket>
            </map>
            <map to='#f17e28'>
              <bucket>&quot;Kalna&quot;</bucket>
            </map>
            <map to='#f18029'>
              <bucket>&quot;Jorhat&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bonai&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Gulavati&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Javer&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kunnathur&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Pratappur&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Udumalpet&quot;</bucket>
            </map>
            <map to='#f2822a'>
              <bucket>&quot;Jharsuguda&quot;</bucket>
            </map>
            <map to='#f2842b'>
              <bucket>&quot;Jangipur&quot;</bucket>
            </map>
            <map to='#f2872d'>
              <bucket>&quot;Jagdalpur&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Adampur&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bishramganj&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chirgaon&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Dhekiajuli&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Gogamba(Similiya)&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jaleswar&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kondotty&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Muzzafarnagar&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pochampalli&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Voligonda&quot;</bucket>
            </map>
            <map to='#f3892e'>
              <bucket>&quot;Islampur&quot;</bucket>
            </map>
            <map to='#f38b2f'>
              <bucket>&quot;Imphal&quot;</bucket>
            </map>
            <map to='#f38d31'>
              <bucket>&quot;Hapur&quot;</bucket>
            </map>
            <map to='#f48f32'>
              <bucket>&quot;Habra&quot;</bucket>
            </map>
            <map to='#f49133'>
              <bucket>&quot;Gubbi&quot;</bucket>
            </map>
            <map to='#f49335'>
              <bucket>&quot;Gingee&quot;</bucket>
            </map>
            <map to='#f59536'>
              <bucket>&quot;Ghatal&quot;</bucket>
            </map>
            <map to='#f59738'>
              <bucket>&quot;Gauripur&quot;</bucket>
            </map>
            <map to='#f5993a'>
              <bucket>&quot;Fatehabad&quot;</bucket>
            </map>
            <map to='#f59b3c'>
              <bucket>&quot;Faridabad&quot;</bucket>
            </map>
            <map to='#f59d3e'>
              <bucket>&quot;Dudhi&quot;</bucket>
            </map>
            <map to='#f5a03f'>
              <bucket>&quot;Doraha&quot;</bucket>
            </map>
            <map to='#f5a241'>
              <bucket>&quot;Dhariwal&quot;</bucket>
            </map>
            <map to='#f5a443'>
              <bucket>&quot;Dharapuram&quot;</bucket>
            </map>
            <map to='#f5a645'>
              <bucket>&quot;Dhar&quot;</bucket>
            </map>
            <map to='#f5a847'>
              <bucket>&quot;Damnagar&quot;</bucket>
            </map>
            <map to='#f5a94b'>
              <bucket>&quot;Cuddalore&quot;</bucket>
            </map>
            <map to='#f6ab4e'>
              <bucket>&quot;Coimbatore&quot;</bucket>
            </map>
            <map to='#f6ad52'>
              <bucket>&quot;Cheyyar&quot;</bucket>
            </map>
            <map to='#f7ae55'>
              <bucket>&quot;Chevella&quot;</bucket>
            </map>
            <map to='#f7b059'>
              <bucket>&quot;Chengannur&quot;</bucket>
            </map>
            <map to='#f8b25c'>
              <bucket>&quot;Chengalpattu&quot;</bucket>
            </map>
            <map to='#f8b360'>
              <bucket>&quot;Charkhari&quot;</bucket>
            </map>
            <map to='#f9b563'>
              <bucket>&quot;Bindki&quot;</bucket>
            </map>
            <map to='#fab767'>
              <bucket>&quot;Beldanga&quot;</bucket>
            </map>
            <map to='#fab86a'>
              <bucket>&quot;Barmer&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bhokar&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Devband&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Gangoh&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Irinjalakkuda&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kallakurichi&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kishunpur&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Madathukulam&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Thammampati&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Vellakkoil&quot;</bucket>
            </map>
            <map to='#fbba6d'>
              <bucket>&quot;Balarampur&quot;</bucket>
            </map>
            <map to='#fbbc71'>
              <bucket>&quot;Bagpat&quot;</bucket>
            </map>
            <map to='#fcbd74'>
              <bucket>&quot;Attur&quot;</bucket>
            </map>
            <map to='#fcbf77'>
              <bucket>&quot;Atrauli&quot;</bucket>
            </map>
            <map to='#fdc17b'>
              <bucket>&quot;Asansol&quot;</bucket>
            </map>
            <map to='#fdc27e'>
              <bucket>&quot;Ankleshwar&quot;</bucket>
            </map>
            <map to='#fec481'>
              <bucket>&quot;Anaimalai&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Begu&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Charama&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Dehradoon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kalanaur&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Khambhat(Grain Market)&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lamlong Bazaar&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mehta&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Nawarangpur&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Papparapatti&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Pune(Khadiki)&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sangarapuram&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Syopurkalan(F&amp;V)&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Uthiramerur&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ait&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Banaganapalli&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bodeli&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Chitwadagaon&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Dhupguri&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Gopalpatti&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jalore&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Konganapuram&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mangal Wedha&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nadia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pallahara&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ruperdeeha&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Singampuneri&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tikonia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Vyra&quot;</bucket>
            </map>
            <map to='#ffc685'>
              <bucket>&quot;Aliganj&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#59a14f'>
              <bucket>&quot;[federated.05ip7811el8irn1apsbep01nbqgv].[avg:max_price:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.05ip7811el8irn1apsbep01nbqgv].[avg:min_price:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.05ip7811el8irn1apsbep01nbqgv].[avg:modal_price:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='indian_agri_data' id='indian!agri!data_325EBE94C35F4585848D132F6D49E3DD'>
            <properties context=''>
              <relation connection='excel-direct.1q1uj9u120fdfv199t1pq1ki70r7' name='indian_agri_data' table='[indian_agri_data$]' type='table'>
                <columns gridOrigin='A1:H2239:no:A1:H2239:0' header='yes' outcome='6'>
                  <column datatype='string' name='state' ordinal='0' />
                  <column datatype='string' name='district' ordinal='1' />
                  <column datatype='string' name='market' ordinal='2' />
                  <column datatype='string' name='commodity' ordinal='3' />
                  <column datatype='integer' name='min_price' ordinal='4' />
                  <column datatype='integer' name='max_price' ordinal='5' />
                  <column datatype='integer' name='modal_price' ordinal='6' />
                  <column datatype='string' name='Category' ordinal='7' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Commodities Distribution in States
</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='indian_agri_data (agri_dataset)' name='federated.05ip7811el8irn1apsbep01nbqgv' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.05ip7811el8irn1apsbep01nbqgv'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column-instance column='[market]' derivation='Attribute' name='[attr:market:nk]' pivot='key' type='nominal' />
            <column aggregation='CountD' caption='Commodity' datatype='string' default-role='measure' default-type='quantitative' name='[commodity]' role='dimension' type='nominal' />
            <column-instance column='[commodity]' derivation='CountD' name='[ctd:commodity:qk]' pivot='key' type='quantitative' />
            <column aggregation='CountD' caption='Market' datatype='string' name='[market]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[market]' derivation='None' name='[none:market:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[State].[Name]'>
                <semantic-value key='&quot;Uttrakhand&quot;' value='&quot;Uttarakhand&quot;' />
              </semantic-values>
            </column>
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.05ip7811el8irn1apsbep01nbqgv].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.05ip7811el8irn1apsbep01nbqgv].[Longitude (generated)]' included-values='non-null' />
          <filter class='categorical' column='[federated.05ip7811el8irn1apsbep01nbqgv].[none:Category:nk]' filter-group='3'>
            <groupfilter function='level-members' level='[none:Category:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.05ip7811el8irn1apsbep01nbqgv].[none:state:nk]'>
            <groupfilter function='level-members' level='[none:state:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.05ip7811el8irn1apsbep01nbqgv].[Latitude (generated)]</column>
            <column>[federated.05ip7811el8irn1apsbep01nbqgv].[Longitude (generated)]</column>
            <column>[federated.05ip7811el8irn1apsbep01nbqgv].[none:state:nk]</column>
            <column>[federated.05ip7811el8irn1apsbep01nbqgv].[none:Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.05ip7811el8irn1apsbep01nbqgv].[Longitude (generated)]' field-type='quantitative' max='12470000.51336718' min='6333180.7093963735' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.05ip7811el8irn1apsbep01nbqgv].[Latitude (generated)]' field-type='quantitative' max='4513239.4834819054' min='771014.1985598451' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='1' field='[federated.05ip7811el8irn1apsbep01nbqgv].[Latitude (generated)]' field-type='quantitative' fold='true' max='4513239.4834819054' min='771014.1985598451' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.05ip7811el8irn1apsbep01nbqgv].[ctd:commodity:qk]' palette='green_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.05ip7811el8irn1apsbep01nbqgv].[none:state:nk]' value='false' />
            <format attr='break-on-special' field='[federated.05ip7811el8irn1apsbep01nbqgv].[none:state:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.05ip7811el8irn1apsbep01nbqgv].[none:state:nk]' value='false' />
            <format attr='omit-on-special' field='[federated.05ip7811el8irn1apsbep01nbqgv].[Latitude (generated)]' value='false' />
            <format attr='break-on-special' field='[federated.05ip7811el8irn1apsbep01nbqgv].[Latitude (generated)]' value='false' />
            <format attr='show-null-value-warning' field='[federated.05ip7811el8irn1apsbep01nbqgv].[Latitude (generated)]' value='false' />
            <format attr='omit-on-special' field='[federated.05ip7811el8irn1apsbep01nbqgv].[Longitude (generated)]' value='false' />
            <format attr='break-on-special' field='[federated.05ip7811el8irn1apsbep01nbqgv].[Longitude (generated)]' value='false' />
            <format attr='show-null-value-warning' field='[federated.05ip7811el8irn1apsbep01nbqgv].[Longitude (generated)]' value='false' />
            <format attr='omit-on-special' field='[federated.05ip7811el8irn1apsbep01nbqgv].[none:market:nk]' value='false' />
            <format attr='break-on-special' field='[federated.05ip7811el8irn1apsbep01nbqgv].[none:market:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.05ip7811el8irn1apsbep01nbqgv].[none:market:nk]' value='false' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.05ip7811el8irn1apsbep01nbqgv].[ctd:commodity:qk]' value='Commodities'>
              <formatted-text>
                <run>Commodities</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='hillshade_highlight_bright' value='true' />
            <format attr='enabled' id='hillshade_highlight_med' value='true' />
            <format attr='enabled' id='hillshade_shadow_faint' value='true' />
            <format attr='enabled' id='hillshade_shadow_med' value='true' />
            <format attr='enabled' id='hillshade_shadow_dark' value='true' />
            <format attr='enabled' id='hillshade_shadow_extreme' value='true' />
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='normal' />
            <format attr='wrap' value='false' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>State:&#9;</run>
                <run bold='true'><![CDATA[<[federated.05ip7811el8irn1apsbep01nbqgv].[none:state:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Distinct count of Commodity:&#9;</run>
                <run bold='true'><![CDATA[<[federated.05ip7811el8irn1apsbep01nbqgv].[ctd:commodity:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-color' value='#f28e2b' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.05ip7811el8irn1apsbep01nbqgv].[Latitude (generated)]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[federated.05ip7811el8irn1apsbep01nbqgv].[none:market:nk]' />
              <geometry column='[federated.05ip7811el8irn1apsbep01nbqgv].[Geometry (generated)]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>State:&#9;</run>
                <run bold='true'><![CDATA[<[federated.05ip7811el8irn1apsbep01nbqgv].[none:state:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Distinct count of Commodity:&#9;</run>
                <run bold='true'><![CDATA[<[federated.05ip7811el8irn1apsbep01nbqgv].[ctd:commodity:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#f28e2b' />
                <format attr='mark-transparency' value='255' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#f28e2b' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='0.0099999997764825821' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.05ip7811el8irn1apsbep01nbqgv].[Latitude (generated)]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <lod column='[federated.05ip7811el8irn1apsbep01nbqgv].[none:state:nk]' />
              <color column='[federated.05ip7811el8irn1apsbep01nbqgv].[ctd:commodity:qk]' />
              <tooltip column='[federated.05ip7811el8irn1apsbep01nbqgv].[attr:market:nk]' />
              <geometry column='[federated.05ip7811el8irn1apsbep01nbqgv].[Geometry (generated)]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>State:&#9;</run>
                <run bold='true'><![CDATA[<[federated.05ip7811el8irn1apsbep01nbqgv].[none:state:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Distinct count of Commodity:&#9;</run>
                <run bold='true'><![CDATA[<[federated.05ip7811el8irn1apsbep01nbqgv].[ctd:commodity:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-color' value='#f28e2b' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.05ip7811el8irn1apsbep01nbqgv].[Latitude (generated)] + [federated.05ip7811el8irn1apsbep01nbqgv].[Latitude (generated)])</rows>
        <cols>[federated.05ip7811el8irn1apsbep01nbqgv].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{D7E603BD-547D-44E7-9418-300A36206BA6}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Prices of Commodities</run>
            <run fontname=' '>Æ </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='indian_agri_data (agri_dataset)' name='federated.05ip7811el8irn1apsbep01nbqgv' />
          </datasources>
          <datasource-dependencies datasource='federated.05ip7811el8irn1apsbep01nbqgv'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column aggregation='CountD' caption='Commodity (copy)' datatype='string' name='[Commodity (copy)_1394427036852277249]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[commodity]' />
            </column>
            <column-instance column='[Category]' derivation='Attribute' name='[attr:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[max_price]' derivation='Avg' name='[avg:max_price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[min_price]' derivation='Avg' name='[avg:min_price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[modal_price]' derivation='Avg' name='[avg:modal_price:qk]' pivot='key' type='quantitative' />
            <column aggregation='CountD' caption='Commodity' datatype='string' default-role='measure' default-type='quantitative' name='[commodity]' role='dimension' type='nominal' />
            <column caption='Max Price' datatype='integer' name='[max_price]' role='measure' type='quantitative' />
            <column caption='Min Price' datatype='integer' name='[min_price]' role='measure' type='quantitative' />
            <column caption='Modal Price' datatype='integer' name='[modal_price]' role='measure' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Commodity (copy)_1394427036852277249]' derivation='None' name='[none:Commodity (copy)_1394427036852277249:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.05ip7811el8irn1apsbep01nbqgv].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.05ip7811el8irn1apsbep01nbqgv].[avg:max_price:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.05ip7811el8irn1apsbep01nbqgv].[avg:modal_price:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.05ip7811el8irn1apsbep01nbqgv].[avg:min_price:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.05ip7811el8irn1apsbep01nbqgv].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.05ip7811el8irn1apsbep01nbqgv].[avg:max_price:qk]&quot;</bucket>
              <bucket>&quot;[federated.05ip7811el8irn1apsbep01nbqgv].[avg:modal_price:qk]&quot;</bucket>
              <bucket>&quot;[federated.05ip7811el8irn1apsbep01nbqgv].[avg:min_price:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.05ip7811el8irn1apsbep01nbqgv].[avg:modal_price:qk]' included-values='in-range'>
            <min>3.5</min>
            <max>74625.0</max>
          </filter>
          <filter class='categorical' column='[federated.05ip7811el8irn1apsbep01nbqgv].[none:Category:nk]' filter-group='3'>
            <groupfilter function='level-members' level='[none:Category:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.05ip7811el8irn1apsbep01nbqgv].[:Measure Names]</column>
            <column>[federated.05ip7811el8irn1apsbep01nbqgv].[avg:modal_price:qk]</column>
            <column>[federated.05ip7811el8irn1apsbep01nbqgv].[none:Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.05ip7811el8irn1apsbep01nbqgv].[:Measure Names]' value='22' />
          </style-rule>
          <style-rule element='field-labels-spanner'>
            <format attr='background-color' scope='rows' value='#00000000' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.05ip7811el8irn1apsbep01nbqgv].[:Measure Names]' value='false' />
            <format attr='text-orientation' field='[federated.05ip7811el8irn1apsbep01nbqgv].[none:Commodity (copy)_1394427036852277249:nk]' value='-90' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.05ip7811el8irn1apsbep01nbqgv].[avg:max_price:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.05ip7811el8irn1apsbep01nbqgv].[:Measure Names]' />
              <tooltip column='[federated.05ip7811el8irn1apsbep01nbqgv].[avg:max_price:qk]' />
              <tooltip column='[federated.05ip7811el8irn1apsbep01nbqgv].[attr:Category:nk]' />
              <lod column='[federated.05ip7811el8irn1apsbep01nbqgv].[avg:modal_price:qk]' />
              <lod column='[federated.05ip7811el8irn1apsbep01nbqgv].[avg:min_price:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1' />
                <format attr='shape' value=':filled/circle' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.05ip7811el8irn1apsbep01nbqgv].[Multiple Values]</rows>
        <cols>([federated.05ip7811el8irn1apsbep01nbqgv].[none:Commodity (copy)_1394427036852277249:nk] / [federated.05ip7811el8irn1apsbep01nbqgv].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{DE015566-35A1-4214-BC36-AB6F33CE32D6}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size maxheight='850' maxwidth='1600' minheight='850' minwidth='1600' sizing-mode='fixed' />
      <datasources>
        <datasource caption='indian_agri_data (agri_dataset)' name='federated.05ip7811el8irn1apsbep01nbqgv' />
      </datasources>
      <datasource-dependencies datasource='federated.05ip7811el8irn1apsbep01nbqgv'>
        <column datatype='string' name='[Category]' role='dimension' type='nominal' />
        <column-instance column='[modal_price]' derivation='Avg' name='[avg:modal_price:qk]' pivot='key' type='quantitative' />
        <column caption='Modal Price' datatype='integer' name='[modal_price]' role='measure' type='quantitative' />
        <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98118' id='7' param='horz' type-v2='layout-flow' w='99000' x='500' y='941'>
            <zone h='98118' id='5' type-v2='layout-basic' w='39875' x='500' y='941'>
              <zone h='98118' id='3' name='Sheet 1' w='39875' x='500' y='941'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='946' h='98118' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='59125' x='40375' y='941'>
              <zone h='83765' id='10' name='Sheet 2' w='59125' x='40375' y='941'>
                <layout-cache cell-count-w='54' minheight='278' non-cell-size-w='79' type-h='scalable' type-w='cell' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone fixed-size='114' h='14353' id='13' is-fixed='true' name='Sheet 2' pane-specification-id='0' param='[federated.05ip7811el8irn1apsbep01nbqgv].[:Measure Names]' type-v2='color' w='59125' x='40375' y='84706'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone fixed-size='78' h='11765' id='9' is-fixed='true' name='Sheet 1' pane-specification-id='4' param='[federated.05ip7811el8irn1apsbep01nbqgv].[ctd:commodity:qk]' type-v2='color' w='10750' x='27875' y='85176' />
        <zone fixed-size='19' h='26941' id='8' is-fixed='true' name='Sheet 1' param='[federated.05ip7811el8irn1apsbep01nbqgv].[none:Category:nk]' type-v2='filter' w='10500' x='1500' y='67059' />
        <zone h='14118' id='12' name='Sheet 2' param='[federated.05ip7811el8irn1apsbep01nbqgv].[avg:modal_price:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='10500' x='61313' y='85765' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='850' minheight='850' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='17' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='16' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone fixed-size='19' h='26941' id='8' mode='checkdropdown' name='Sheet 1' param='[federated.05ip7811el8irn1apsbep01nbqgv].[none:Category:nk]' type-v2='filter' w='10500' x='1500' y='67059'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='98118' id='3' is-fixed='true' name='Sheet 1' w='39875' x='500' y='941'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='78' h='11765' id='9' name='Sheet 1' pane-specification-id='4' param='[federated.05ip7811el8irn1apsbep01nbqgv].[ctd:commodity:qk]' type-v2='color' w='10750' x='27875' y='85176'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='14118' id='12' name='Sheet 2' param='[federated.05ip7811el8irn1apsbep01nbqgv].[avg:modal_price:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='10500' x='61313' y='85765'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='83765' id='10' is-fixed='true' name='Sheet 2' w='59125' x='40375' y='941'>
                  <layout-cache cell-count-w='54' minheight='278' non-cell-size-w='79' type-h='scalable' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='114' h='14353' id='13' name='Sheet 2' pane-specification-id='0' param='[federated.05ip7811el8irn1apsbep01nbqgv].[:Measure Names]' type-v2='color' w='59125' x='40375' y='84706'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{C2E10454-1097-416C-95F2-4153DA5075FD}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.5' source-height='44'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.05ip7811el8irn1apsbep01nbqgv].[none:Category:nk]' type='filter' />
            <card pane-specification-id='4' param='[federated.05ip7811el8irn1apsbep01nbqgv].[ctd:commodity:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.05ip7811el8irn1apsbep01nbqgv].[ctd:commodity:qk]</field>
            <field>[federated.05ip7811el8irn1apsbep01nbqgv].[none:Category:nk]</field>
            <field>[federated.05ip7811el8irn1apsbep01nbqgv].[none:market:nk]</field>
            <field>[federated.05ip7811el8irn1apsbep01nbqgv].[none:state:nk]</field>
          </color-one-way>
        </highlight>
        <map-scale-visibility value='0' />
        <default-map-tool-selection tool='1' />
        <default-map-unit-selection mapunit='1' />
      </viewpoint>
      <simple-id uuid='{76EAE729-3E0B-49C5-8470-1AD151E7772B}' />
    </window>
    <window class='worksheet' maximized='true' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card type='pages' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.05ip7811el8irn1apsbep01nbqgv].[none:Category:nk]' type='filter' />
            <card param='[federated.05ip7811el8irn1apsbep01nbqgv].[avg:modal_price:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.05ip7811el8irn1apsbep01nbqgv].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-height' />
        <highlight>
          <color-one-way>
            <field>[federated.05ip7811el8irn1apsbep01nbqgv].[:Measure Names]</field>
            <field>[federated.05ip7811el8irn1apsbep01nbqgv].[Category (group)]</field>
            <field>[federated.05ip7811el8irn1apsbep01nbqgv].[avg:min_price:qk]</field>
            <field>[federated.05ip7811el8irn1apsbep01nbqgv].[none:Category:nk]</field>
            <field>[federated.05ip7811el8irn1apsbep01nbqgv].[none:Commodity (copy)_1394427036852277249:nk]</field>
            <field>[federated.05ip7811el8irn1apsbep01nbqgv].[none:commodity:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{06E43794-0656-429E-AFD2-788E06DA9B16}' />
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 1'>
          <zoom type='entire-view' />
          <map-scale-visibility value='0' />
          <default-map-unit-selection mapunit='1' />
        </viewpoint>
        <viewpoint name='Sheet 2'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{A3D98526-6AA4-46B0-B222-70AA41AB9E21}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 1' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
